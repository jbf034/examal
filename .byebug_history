continue
cexit
Student.first.exams
Student.first.exam
Student.first
Contest
self
self.
self.methods
self
slef
Exam.first.questions.reload
Exam.first.questions
Exam.first.question
Exam.first.questions
Exam.first
Question.first
Question
questions
questions.first
questions.all
questions
questions << qsts
qsts

questions.first
questions.class
questions.all
questions
id
exit
params["grade"]
params
exam_params
continue
next
current_user
csv_text
next
params["subject_id"]
params
continue
next
@question
next
question_params
next
 params["question"]["subject_id"]
continue
question_params["subject_id"] = params["question"]["subject_id"]
params
question_params["subject_id"] = 
question_params["subject_id"]
question_params
Question.first
exit
current_user.subjects.new
current_user.subjects
continue
current_user
continue
teacher
admin
current_user
teacher
current_user
continue
search
continue
@student.errors.messages
@student.errors.methods
@student.errors
@student.errors[0].message
@student.errors.message
@student.errors
@student
@student = Student.create!({stuid: row["学号"], name: row["姓名"], password: row['密码'], sex: row["性别"], grade: row["年级"]})
continue
contiue
continue
row.headers
continue
next
error.blank?
error
continue
Student
Student.first
Student.frist
['1'].blank?
[].blank?
[].blank>
[].length
CSV.open(csv_text)
CSV.parse(csv_text)[0]
CSV.parse(csv_text)
row.headers - ["学号", "姓名", "性别","年级", "密码"]
row.headers - ["学号", "姓名", "性别", "密码"]
row.headers - ["学号", "姓名", "性别", "密码", "年级1"]
row.headers - ["学号", "姓名", "性别", "密码", "年级"]
row.headers.include?(["学号", "姓名", "性别", "密码", "年级"])
row.headers.include?("学号", "姓名", "性别", "密码", "年级")
row.headers.include?(["学号", "姓名", "性别", "密码", "年级"])
row.headers
row
a
rows
row.keys
row.methods
row["学号"]
row
exit
row[0]
row.field
row.headers
row.row
row.methods
row
continue
next
csv_text = csv_text.path
csv_text.path
csv_text.methods
csv_text.to_string
csv_text
continue
csv_text.encode("utf-8", replace: nil)
csv_text.force_encoding("ISO-8859-1")
csv_text
csv
continue
csv[0][1]
csv[0][0]
csv[0]
csv
next
csv_text
continue
next
csv_text
csv_text = File.read('...')
CSV.read(File.read(params["data_file"].tempfile))
File.read(params["data_file"].tempfile)
params["data_file"].tempfile
CSV.read(params["data_file"].tempfile)
CSV.read(params["data_file"].tempfile,'r')
params["data_file"].tempfile
params["data_file"]
params
CSV
continue
params
